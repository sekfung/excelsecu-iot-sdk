plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "io.freefair.lombok" version "6.3.0"
}


group = "com.excelsecu.iot"
version = "1.0.2"


shadowJar {
    minimize()
    mergeServiceFiles()
}

java {
    withJavadocJar()
    withSourcesJar()
    shadowJar
}

repositories {
    mavenCentral()
}


javadoc {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    options.addStringOption('Xdoclint:none', '-quiet')
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


publishing {
    publications {
        shadow(MavenPublication) { publication ->
            group = 'com.excelsecu.iot'
            artifactId = 'iot-sdk-java'
            from components.java
            version = project.version
            pom {
                name = 'Excelsecu IoT SDK'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description =  'Java SDK For Excelsecu IoT Platform'
                url  = 'https://iot.excelsecu.com'

                scm {
                    connection =  'scm:git:https://github.com/sekfung/excelsecu-iot-sdk.git'
                    developerConnection =  'scm:git:git@github.com:sekfung/excelsecu-iot-sdk.git'
                    url =  'https://iot.excelsecu.com'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id =  'sekfung'
                        name =  'Sekfung Lau'
                        email = 'sekfung.lau@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "$ossrhUsername"
                password "$ossrhPassword"
            }

        }
    }
}

signing {
    sign publishing.publications.shadow
}

ext {
    publishedArtifactId = project.name
    httpclient_version = "5.1.2"
    slf4j_version = '1.7.32'
    junit_version = '4.13.2'
    jackson_version = '2.13.1'
    log4j_version = '2.17.1'
    lombok_version = '1.18.22'
}

configurations.all {
    resolutionStrategy {
        force  "org.slf4j:slf4j-api:$slf4j_version"
    }
}




dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation "org.apache.httpcomponents.client5:httpclient5:${httpclient_version}"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "org.slf4j:slf4j-api:$slf4j_version"
    implementation "org.slf4j:slf4j-simple:$slf4j_version"
    implementation "org.slf4j:slf4j-log4j12:$slf4j_version"
    testImplementation "junit:junit:$junit_version"
}




test {
    useJUnitPlatform()
}